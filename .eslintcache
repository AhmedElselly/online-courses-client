[{"D:\\webapps\\mern\\online_courses_app\\client\\src\\index.js":"1","D:\\webapps\\mern\\online_courses_app\\client\\src\\App.js":"2","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Home.js":"3","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\Login.js":"4","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\Register.js":"5","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Navbar.js":"6","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\apiUser.js":"7","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\PrivateRoute.js":"8","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseForm.js":"9","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\apiCourse.js":"10","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CoursesList.js":"11","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseToList.js":"12","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseShow.js":"13","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseEdit.js":"14","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\NewLesson.js":"15","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\PublishedCourses.js":"16","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\Enroll.js":"17","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\LearnPage.js":"18","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\EnrolledList.js":"19","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\LandingPage.js":"20","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Search.js":"21"},{"size":277,"mtime":1611575527103,"results":"22","hashOfConfig":"23"},{"size":1682,"mtime":1612540636625,"results":"24","hashOfConfig":"23"},{"size":421,"mtime":1612610124690,"results":"25","hashOfConfig":"23"},{"size":1412,"mtime":1611824871622,"results":"26","hashOfConfig":"23"},{"size":2296,"mtime":1611825890152,"results":"27","hashOfConfig":"23"},{"size":2101,"mtime":1618491141309,"results":"28","hashOfConfig":"23"},{"size":943,"mtime":1616070482556,"results":"29","hashOfConfig":"23"},{"size":435,"mtime":1611836126727,"results":"30","hashOfConfig":"23"},{"size":3118,"mtime":1618489804662,"results":"31","hashOfConfig":"23"},{"size":3507,"mtime":1616070471927,"results":"32","hashOfConfig":"23"},{"size":1194,"mtime":1611850556316,"results":"33","hashOfConfig":"23"},{"size":731,"mtime":1616070616703,"results":"34","hashOfConfig":"23"},{"size":4473,"mtime":1616070588261,"results":"35","hashOfConfig":"23"},{"size":5389,"mtime":1612004819996,"results":"36","hashOfConfig":"23"},{"size":2419,"mtime":1611920346368,"results":"37","hashOfConfig":"23"},{"size":1534,"mtime":1616070653088,"results":"38","hashOfConfig":"23"},{"size":1069,"mtime":1612517946735,"results":"39","hashOfConfig":"23"},{"size":3934,"mtime":1612604126554,"results":"40","hashOfConfig":"23"},{"size":2024,"mtime":1616070684077,"results":"41","hashOfConfig":"23"},{"size":2345,"mtime":1612609541903,"results":"42","hashOfConfig":"23"},{"size":1952,"mtime":1616070720451,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1rb12qg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\webapps\\mern\\online_courses_app\\client\\src\\index.js",[],["94","95"],"D:\\webapps\\mern\\online_courses_app\\client\\src\\App.js",["96"],"import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport './components/style.css';\n\nimport Home from './components/Main/Home';\nimport Navbar from './components/Main/Navbar';\nimport Login from './components/users/Login';\nimport Register from './components/users/Register';\n\nimport PrivateRoute from './components/Main/PrivateRoute';\n\nimport CourseForm from './components/courses/CourseForm';\nimport CourseEdit from './components/courses/CourseEdit';\nimport CoursesList from './components/courses/CoursesList';\nimport CourseShow from './components/courses/CourseShow';\nimport PublishedCourses from './components/courses/PublishedCourses';\nimport LearnPage from './components/courses/LearnPage';\nimport EnrolledList from './components/courses/EnrolledList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Navbar/>\n      <Switch>\n      \t<Route exact path='/' component={Home} />\n        <Route exact path='/courses' component={CoursesList} />\n      \t<Route exact path='/login' component={Login} />\n      \t<Route exact path='/register' component={Register} />\n\n        {/*Courses Routes*/}\n        {/*<PrivateRoute exact path='/courses/published' component={PublishedCourses} />*/}\n        <PrivateRoute exact path='/course/new/:userId' component={CourseForm} />\n        <PrivateRoute exact path='/course/edit/:courseId' component={CourseEdit} />\n        <PrivateRoute exact path='/teach/course/:courseId' component={CourseShow} />\n        <PrivateRoute exact path='/learn/list/:userId' component={EnrolledList} />\n        <PrivateRoute exact path='/learn/:enrolId' component={LearnPage} />\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Home.js",["97"],"import React from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport PublishedCourses from '../courses/PublishedCourses';\r\nimport LandingPage from './LandingPage';\r\nimport Search from './Search';\r\n\r\n\r\nconst Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<LandingPage/>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Search/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<PublishedCourses/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\Login.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\Register.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Navbar.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\users\\apiUser.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\PrivateRoute.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseForm.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\apiCourse.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CoursesList.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseToList.js",["98"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n\tListItem,\r\n\tListItemAvatar,\r\n\tAvatar,\r\n\tListItemText,\r\n\tDivider\r\n} from '@material-ui/core';\r\n\r\nclass CourseToList extends Component{\r\n\trender(){\r\n\t\tconsole.log(this.props)\r\n\t\tconst {\r\n\t\t\t_id,\r\n\t\t\tname,\r\n\t\t\tdescription,\r\n\t\t\tcategory\r\n\t\t} = this.props;\r\n\t\treturn(\r\n\t\t\t<Link to={`/teach/course/${_id}`} style={{color: 'black'}}>\r\n\t\t\t\t<ListItem button>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<Avatar src={`https://online-courses-backend.herokuapp.com/courses/${_id}/image`} />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText primary={name} secondary={description} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Divider/>\r\n\t\t\t</Link>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CourseToList;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseShow.js",["99","100"],"import React, {Component, createRef} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {courseShow, publish, getStats} from './apiCourse';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tTypography,\r\n\tIconButton,\r\n\tListItemAvatar,\r\n\tListItemText,\r\n\tListItem,\r\n\tList,\r\n\tAvatar,\r\n\tDivider,\r\n\tButton\r\n} from '@material-ui/core';\r\n\r\nimport {Edit} from '@material-ui/icons';\r\nimport NewLesson from './NewLesson';\r\n\r\n\r\nclass CourseShow extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t_id: '',\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tcategory: '',\r\n\t\t\tinstructor: {},\r\n\t\t\tpublished: null,\r\n\t\t\tlessons: [],\r\n\t\t\tenrolled: 0,\r\n\t\t\tcompleted: 0\r\n\t\t}\r\n\t\tthis.addNewLesson = this.addNewLesson.bind(this);\r\n\t\tthis.handlePublish = this.handlePublish.bind(this);\r\n\t\tthis.courseStats = this.courseStats.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tcourseShow(token, courseId).then(res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tthis.setState({\r\n\t\t\t\t_id: res.data._id,\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tdescription: res.data.description,\r\n\t\t\t\tcategory: res.data.category,\r\n\t\t\t\tinstructor: res.data.instructor,\r\n\t\t\t\tpublished: res.data.published,\r\n\t\t\t\tlessons: res.data.lessons\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tthis.courseStats();\r\n\t}\r\n\r\n\taddNewLesson(lesson){\r\n\t\tthis.setState({lessons: [...this.state.lessons, lesson]});\r\n\t}\r\n\r\n\thandlePublish(e){\r\n\t\te.preventDefault();\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tlet published = true;\r\n\t\tpublish(courseId, _id, token, published).then(res => {\r\n\t\t\tthis.setState({published: res.data.published});\r\n\t\t})\r\n\t}\r\n\r\n\tcourseStats() {\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tgetStats(courseId, token).then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tenrolled: res.data.totalEnrolled,\r\n\t\t\t\tcompleted: res.data.totalCompleted\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst {\r\n\t\t\t_id,\r\n\t\t\tname, \r\n\t\t\tdescription,\r\n\t\t\tcategory,\r\n\t\t\tinstructor,\r\n\t\t\tpublished,\r\n\t\t\tlessons,\r\n\t\t\tenrolled,\r\n\t\t\tcompleted\r\n\t\t} = this.state;\r\n\t\tconsole.log(instructor)\r\n\t\t\r\n\t\tconst imageUrl = `https://online-courses-backend.herokuapp.com/courses/${_id}/image`;\r\n\t\tconst ref = createRef();\r\n\t\treturn (\r\n\t\t\t<div className='container mt-5'>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\ttitle={name}\r\n\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t\t\t\t\t<h5>{`By ${instructor.fullName}`}</h5>\r\n\t\t\t\t\t\t\t\t\t<span>{category}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{isAuthenticated() && isAuthenticated().user._id === instructor._id && <div className='row'>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/course/edit/${_id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"Edit\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Edit/>\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t<NewLesson courseId={_id} ref={ref} addNewLesson={this.addNewLesson} />\r\n\t\t\t\t\t\t\t\t\t{!published ? (\r\n\t\t\t\t\t\t\t\t\t\t<Button className='ml-3' aria-label=\"Publish\" color=\"secondary\" variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handlePublish}>\r\n\t\t\t\t\t\t\t\t\t\t\tPublish\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Button className='ml-3' aria-label=\"Publish\" color=\"secondary\" variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handlePublish} disabled>\r\n\t\t\t\t\t\t\t\t\t\t\tPublish\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t<span className='badge bg-info text-dark'>{enrolled} enrolled {completed} completed</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<CardMedia \r\n\t\t\t\t\t\tstyle={{height: 0, paddingTop: '56%'}} \r\n\t\t\t\t\t\timage={`https://online-courses-backend.herokuapp.com/courses/${_id}/image`} \r\n\t\t\t\t\t\ttitle={name} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='ml-3'>\r\n\t\t\t\t\t\t<Typography variant='body1'>{description}</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<div className='mt-5'>\r\n\t\t\t\t<h4>{lessons.length} {lessons && lessons.length === 1 ? 'Lesson':'Lessons'}</h4>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{lessons && lessons.map((lesson, index) => {\r\n\t\t\t\t\t\treturn(<span key={index}>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<Avatar> {index+1} </Avatar>\r\n\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t<ListItemText primary={lesson.title} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<Divider variant=\"inset\" component=\"li\" />\r\n\t\t\t\t\t\t</span>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CourseShow;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\CourseEdit.js",["101"],"import React, {Component, Fragment} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tTextField,\r\n\tIconButton,\r\n\tButton\r\n} from '@material-ui/core';\r\nimport {PhotoCamera} from '@material-ui/icons';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {courseShow, updateCourse, updateLesson} from './apiCourse';\r\n\r\nclass CourseEdit extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tcategory: '',\r\n\t\t\timage: '',\r\n\t\t\tinstructor: {},\r\n\t\t\tlessons: [],\r\n\t\t\tloaded: false\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tcourseShow(token, courseId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tid: res.data._id,\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tdescription: res.data.description,\r\n\t\t\t\tcategory: res.data.category,\r\n\t\t\t\tinstructor: res.data.instructor,\r\n\t\t\t\tlessons: res.data.lessons\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tconst formData = new FormData();\r\n\t\tconst {name, description, image, category, lessons} = this.state;\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('image', image);\r\n\t\tformData.append('category', category);\r\n\t\tformData.append('description', description);\r\n\t\tupdateCourse(formData, courseId, _id, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({loaded: true});\r\n\t\t})\r\n\r\n\t}\r\n\r\n\thandleLessonChange = (name, index) => e => {\r\n\t\tconst {lessons} = this.state;\r\n\t\tlessons[index][name] = e.target.value;\r\n\t\tthis.setState({...lessons, lessons});\r\n\t}\r\n\r\n\thandleLessonSubmit = (lesson, index) => e => {\r\n\t\t// console.log(lesson)\r\n\t\te.preventDefault();\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {courseId} = this.props.match.params;\r\n\t\tupdateLesson(courseId, _id, token, lesson.title, lesson.content, lesson.resource_url, index).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t})\r\n\t}\r\n\r\n\tmoveUp = index => e => {\r\n\t\tconst {lessons} = this.state;\r\n\t\tlet up = lessons[index];\r\n\t\tlessons[index] = lessons[index - 1];\r\n\t\tlessons[index - 1] = up;\r\n\t\tthis.setState({...lessons, lessons});\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {id, name, description, image, category, instructor, lessons, loaded} = this.state;\r\n\t\tif(loaded){\r\n\t\t\treturn <Redirect to={`/teach/course/${id}`} />\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<CardHeader\r\n\t\t\t\t\ttitle={<TextField label='Title' type='text' name='name' fullWidth value={name} onChange={this.handleChange} />}\r\n\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Link to={`/`}>\r\n\t\t\t\t\t\t\t\tBy {instructor.fullName}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{<TextField label='Category' type='text' name='category' fullWidth value={category} onChange={this.handleChange} />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<Button variant='contained' color='secondary' onClick={this.handleSubmit}>Save</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={''}>\r\n\t\t\t\t\t<CardMedia style={{height: 0, paddingTop: '56%'}} image={`http://localhost:8000/courses/${id}/image`} title={name}/>\r\n\t\t\t\t\t<div className={''}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<TextField multiline rows=\"5\" label=\"Description\" fullWidth type=\"text\"\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t\tname='description'\r\n\t\t\t\t\tonChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t     \t<input accept=\"image/*\" name='image' onChange={this.handleChange} style={{display: 'none'}} id=\"icon-button-file\" type=\"file\" />\r\n\t\t\t      <label htmlFor=\"icon-button-file\">\r\n\t\t\t        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n\t\t\t          <PhotoCamera />\r\n\t\t\t        </IconButton>\r\n\t\t\t      </label>\r\n\t\t      \t<span>{image ? image.name : ''}</span>\r\n\t\t    \t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<h3>Edit Lessons</h3>\r\n\t\t\t\t\t{lessons.length && lessons.map((lesson, index) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Fragment key={lesson._id}>\r\n\t\t\t\t\t\t\t<h5>lesson {index + 1}</h5>\r\n\t\t\t\t\t\t\t<TextField label=\"Title\" type=\"text\" fullWidth\r\n\t\t\t\t\t\t\tvalue={lesson.title} onChange={this.handleLessonChange('title', index)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<TextField label=\"Content\" type=\"text\" multiline rows=\"5\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvalue={lesson.content}\r\n\t\t\t\t\t\t\tonChange={this.handleLessonChange('content', index)}/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<TextField label=\"Resource link\" type=\"text\" fullWidth\r\n\t\t\t\t\t\t\tvalue={lesson.resource_url}\r\n\t\t\t\t\t\t\tonChange={this.handleLessonChange('resource_url', index)} />\r\n\t\t\t\t\t\t\t{index !== 0 && (\r\n\t\t\t\t\t\t\t\t<IconButton color=\"primary\" onClick={this.moveUp(index)}>\r\n\t\t\t\t\t\t\t\t\t<ArrowUpwardIcon/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t<div className='mt-4'>\r\n\t\t\t\t\t\t\t\t<Button variant='contained' color='secondary' onClick={this.handleLessonSubmit(lesson, index)}>Save</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CourseEdit;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\NewLesson.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\PublishedCourses.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\Enroll.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\LearnPage.js",["102","103","104"],"import React, {useEffect, useState} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {getEnrollment} from './apiCourse';\r\nimport {\r\n\tAvatar,\r\n\tButton\r\n} from '@material-ui/core';\r\nimport {\r\n\tCheckCircle\r\n} from '@material-ui/icons';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\nimport {complete} from './apiCourse';\r\n\r\nconst LearnPage = (props) => {\r\n\tconst [enrol, setEnrol] = useState({course: {instructor: []}, lessonsStatus: []});\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [totalComplete, setTotalComplete] = useState(0);\r\n\tconst [values, setValues] = useState({\r\n\t\tredirect: false,\r\n\t\tdrawer: -1\r\n\t})\r\n\tuseEffect(() => {\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {enrolId} = props.match.params;\r\n\t\tgetEnrollment(enrolId, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetEnrol(res.data);\r\n\t\t\tsetLoading(true);\r\n\t\t})\r\n\t\t// getLessons()\r\n\t}, [props.match.params.enrolId]);\r\n\r\n\tconst selectDrawer = (index) => {\r\n\t\tsetValues({...values, drawer: index});\r\n\t}\r\n\r\n\tconst markComplete = () => {\r\n\t\tconsole.log('clicked')\r\n\t\tif(!enrol.lessonsStatus[values.drawer].lesson.complete){\r\n\t\t\tconst lessonStatus = enrol.lessonsStatus;\r\n\t\t\tlessonStatus[values.drawer].complete = true;\r\n\t\t\tlet count = totalCompleted(lessonStatus);\r\n\t\t\tlet updatedData = {};\r\n\t\t\tupdatedData.lessonStatusId = lessonStatus[values.drawer]._id;\r\n\t\t\tupdatedData.complete = true;\r\n\t\t\tif(count == lessonStatus.length){\r\n\t\t\t\tupdatedData.courseCompleted = Date.now();\r\n\t\t\t}\r\n\t\t\tconst {token} = isAuthenticated();\r\n\t\t\tcomplete(props.match.params.enrolId, token, updatedData).then(res => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetEnrol({...enrol, lessonsStatus: lessonStatus});\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst totalCompleted = (lessons) => {\r\n\t\tlet count = lessons.reduce((total, lessonStatus) => {\r\n\t\t\treturn total + (lessonStatus.complete ? 1 : 0);\r\n\t\t}, 0);\r\n\t\tsetTotalComplete(count)\r\n\t\treturn count;\r\n}\r\n\r\n\tconst getLessons = () => {\r\n\t\t\r\n\t\tconst allLessons = enrol.lessonsStatus.map((lesson, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t\t<li style={{background: 'black'}} onClick={() => selectDrawer(index)} className='list-group-item d-flex justify-content-between align-items-center'>\r\n\t\t\t\t\t<Avatar style={{\r\n\t\t\t\t\t marginRight: '20px'\r\n\t\t\t\t\t}}>{index+1}</Avatar>{lesson.lesson.title} {lesson.complete ? (<CheckCircle className={'ml-3'}/>):(\r\n\t\t\t\t\t\t\t<RadioButtonUncheckedIcon className={'ml-3'}/>\r\n\t\t\t\t\t\t)}</li>\r\n\t\t\t\t\t<hr style={{color: 'white'}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn allLessons;\r\n\t}\r\n\r\n\tconsole.log(enrol)\r\n\r\n\tconst getCourseDetails = () => {\r\n\t\treturn (\r\n\t\t\t<div className='row container-fluid'>\r\n\t\t\t\t<div className='col-sm-4 course-menu'>\r\n\t\t\t\t\t<h4 style={{color: 'white'}} className='ml-5 mb-5'>Lessons</h4>\r\n\t\t\t\t\t<ul className='list-group'>\r\n\t\t\t\t\t\t{getLessons()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-8 mt-3'>\r\n\t\t\t\t\t<h1>{enrol.course.name}</h1>\r\n\t\t\t\t\t{values.drawer !== -1 && (\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t  <div className=\"card-header\">\r\n\t\t\t\t\t\t    {enrol.lessonsStatus[values.drawer].lesson.title}\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"card-body\">\r\n\t\t\t\t\t\t    <p className=\"card-text\">{enrol.lessonsStatus[values.drawer].lesson.content}</p>\r\n\t\t\t\t\t\t    <a href={`${enrol.lessonsStatus[values.drawer].lesson.resource_link}`} className=\"btn btn-primary\">Resource Link</a>\r\n\t\t\t\t\t\t    <Button\r\n\t\t\t\t\t\t    \tclassName='ml-5'\r\n\t\t\t\t\t\t\t\t\tonClick={markComplete}\r\n\t\t\t\t\t\t\t\t\tvariant={enrol.lessonsStatus[values.drawer].complete ?\r\n\t\t\t\t\t\t\t\t\t'contained' : 'outlined'}\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t{enrol.lessonsStatus[values.drawer].complete ? \"Completed\" : \"Mark as complete\"}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\t\t\r\n\t\t)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='row'>\t\t\t\r\n\t\t\t{!loading ? (\r\n\t\t\t\t<h3>Loading...</h3>\r\n\t\t\t):(getCourseDetails())}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LearnPage;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\courses\\EnrolledList.js",["105"],"import React, {Component, Fragment} from 'react';\r\nimport {listByStudent} from './apiCourse';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {\r\n\tGridList,\r\n\tGridListTile,\r\n\tGridListTileBar,\r\n\tButton\r\n} from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport Enroll from './Enroll';\r\n\r\n\r\nclass EnrolledList extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tposts: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tlistByStudent(token, _id).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({posts: res.data});\r\n\t\t})\r\n \t} \r\n\r\n\r\n\trender(){\r\n\t\tconst allCourses = this.state.posts.map(post => {\r\n\t\t\treturn(\r\n\t\t\t\t<GridListTile key={post.course._id} style={{padding:0}}>\r\n\t\t\t\t\t<Link to={`/teach/course/${post.course._id}`}>\r\n\t\t\t\t\t\t<img style={{objectFit: 'cover', width: '100%', height: '100%'}} src={`https://online-courses-backend.herokuapp.com/courses/${post.course._id}/image`} alt={post.course.name} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<GridListTileBar\r\n\t\t\t\t\t\ttitle={<Link style={{color: 'white'}} to={\"/teach/course/\"+post.course._id}>\r\n\t\t\t\t\t\t{post.course.name}</Link>}\r\n\t\t\t\t\t\tsubtitle={<span>{post.course.category}</span>}\r\n\t\t\t\t\t\tactionIcon={isAuthenticated() && (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<Link className='mr-3 link-item' to={`/learn/${post._id}`}>\r\n\t\t\t\t\t\t\t<Button variant='contained' color='secondary'>\r\n\t\t\t\t\t\t\t\tShow\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{post.completed ? (\r\n\t\t\t\t\t\t\t\t<CheckCircleIcon color=\"secondary\"/>\r\n\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t<DonutLargeIcon className='mr-2' color='secondary'/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</GridListTile>\r\n\t\t\t)\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<GridList className='mt-5' cellHeight={220} cols={2}>\r\n\t\t\t\t\t{allCourses}\r\n\t\t\t\t</GridList>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EnrolledList;","D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\LandingPage.js",[],"D:\\webapps\\mern\\online_courses_app\\client\\src\\components\\Main\\Search.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":17,"column":8,"nodeType":"112","messageId":"113","endLine":17,"endColumn":24},{"ruleId":"110","severity":1,"message":"114","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":24},{"ruleId":"110","severity":1,"message":"115","line":18,"column":4,"nodeType":"112","messageId":"113","endLine":18,"endColumn":12},{"ruleId":"110","severity":1,"message":"116","line":2,"column":15,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},{"ruleId":"110","severity":1,"message":"117","line":103,"column":9,"nodeType":"112","messageId":"113","endLine":103,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":59,"column":46,"nodeType":"112","messageId":"113","endLine":59,"endColumn":53},{"ruleId":"110","severity":1,"message":"119","line":18,"column":9,"nodeType":"112","messageId":"113","endLine":18,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":32,"column":5,"nodeType":"122","endLine":32,"endColumn":33,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":47,"column":13,"nodeType":"126","messageId":"127","endLine":47,"endColumn":15},{"ruleId":"110","severity":1,"message":"128","line":14,"column":8,"nodeType":"112","messageId":"113","endLine":14,"endColumn":14},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'PublishedCourses' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is defined but never used.","'category' is assigned a value but never used.","'Redirect' is defined but never used.","'imageUrl' is assigned a value but never used.","'lessons' is assigned a value but never used.","'totalComplete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.","ArrayExpression",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Enroll' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [props.match.params, props.match.params.enrolId]",{"range":"134","text":"135"},[933,961],"[props.match.params, props.match.params.enrolId]"]